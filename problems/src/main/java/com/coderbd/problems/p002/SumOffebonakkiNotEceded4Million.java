/**
 * Even Fibonacci numbers
 * Problem 2:
 * * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 */
package com.coderbd.problems.p002;

/**
 *
 * @author Rajail Islam
 */
public class SumOffebonakkiNotEceded4Million {

    public static void main(String[] args) {
        calSumOffebonakki(1, 4000000);
    }

    public static int calSumOffebonakki(int startingNumber, int conditionedvalue) {
        int sum = 2;
        int n1 = 1;
        int n2 = 2;
        System.out.print(n1 + " " + n2);//printing 0 and 1    
        int n3 = 0;
     /*   for (startingNumber = 3; startingNumber <= endNumber; startingNumber++) {

            n3 = n1 + n2;
            System.out.print(" " + n3);
            if (n3 % 2 == 0) {
                sum += n3;
            }
            n1 = n2;
            n2 = n3;

            if (n3 >= conditionedvalue) {
                break;
            }

        }
*/
        while (n3 <= conditionedvalue) {
            n3 = n1 + n2;
            System.out.print(" " + n3);
            if (n3 % 2 == 0) {
                sum += n3;
            }
            n1 = n2;
            n2 = n3;

        }
        System.out.println("\nn3: " + n3);
        System.out.println("SUM: " + sum);
        return sum;
    }

}
